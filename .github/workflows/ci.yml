name: CI
on:
  push:
    branches:
      - main
  pull_request:
  schedule:
    - cron: "30 11 * * *"

env:
  # Turn all warnings into errors in CI
  RUSTFLAGS: -Dwarnings
  # CI builds are more akin to from-scratch builds, incremental compilation adds
  # unnecessary dependency-tracking and IO overhead, reducing caching
  # effectiveness.
  CARGO_INCREMENTAL: 0

jobs:
  macroquest:
    name: Build MacroQuest
    runs-on: windows-latest
    strategy:
      fail-fast: false
    outputs:
      commit: ${{ steps.build-macroquest.outputs.commit }}
    steps:
      - name: Checkout macroquest-rs
        uses: actions/checkout@v4
        with:
          path: ./crates
      - name: Build MacroQuest
        id: build-macroquest
        uses: ./crates/.github/actions/macroquest
        with:
          ref: rel-live

  build:
    name: Build - ${{matrix.rust}}
    runs-on: windows-latest
    needs: [macroquest]
    strategy:
      matrix:
        rust: [stable, beta, nightly]
    steps:
      - name: Checkout macroquest-rs
        uses: actions/checkout@v4
        with:
          path: ./crates
      - name: Build MacroQuest
        uses: ./crates/.github/actions/macroquest
        with:
          ref: ${{ needs.macroquest.outputs.commit }}
      - name: Fetch Rust Toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Cache Rust Dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: crates
      - name: Build with Default Features
        run: cargo build --workspace --all-targets
        working-directory:  ${{ github.workspace }}/crates
      - name: Build with All Features
        run: cargo build --workspace --all-targets --all-features
        working-directory: ${{ github.workspace }}/crates


  unit-test:
    name: Unit Tests
    runs-on: windows-latest
    needs: [macroquest]
    steps:
      - name: Checkout macroquest-rs
        uses: actions/checkout@v4
        with:
          path: ./crates
      - name: Build MacroQuest
        uses: ./crates/.github/actions/macroquest
        with:
          ref: ${{ needs.macroquest.outputs.commit }}
      - name: Fetch Rust Toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Cache Rust Dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: crates
      - name: Install cargo-nextest
        run: cargo install cargo-nextest --locked
      - name: Build Tests
        run: cargo nextest run --workspace --all-targets --all-features --no-run
        working-directory:  ${{ github.workspace }}/crates
      - name: Run Tests
        run: cargo nextest run --workspace --all-targets --all-features
        working-directory:  ${{ github.workspace }}/crates


  doc-test:
    name: Doc Tests
    runs-on: windows-latest
    needs: [macroquest]
    steps:
      - name: Checkout macroquest-rs
        uses: actions/checkout@v4
        with:
          path: ./crates
      - name: Build MacroQuest
        uses: ./crates/.github/actions/macroquest
        with:
          ref: ${{ needs.macroquest.outputs.commit }}
      - name: Fetch Rust Toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Cache Rust Dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: crates
      - name: Run Doc Tests
        run: cargo test --workspace --all-features --doc
        working-directory:  ${{ github.workspace }}/crates


  clippy:
    name: Clippy
    runs-on: windows-latest
    needs: [macroquest]
    strategy:
      fail-fast: false
    steps:
      - name: Checkout macroquest-rs
        uses: actions/checkout@v4
        with:
          path: ./crates
      - name: Build MacroQuest
        uses: ./crates/.github/actions/macroquest
        with:
          ref: ${{ needs.macroquest.outputs.commit }}
      - name: Install Clippy
        uses: dtolnay/rust-toolchain@clippy
        with:
          toolchain: nightly
      - name: Cache Rust Dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: crates
      - run: cargo clippy --workspace --all-targets --all-features
        working-directory: ${{ github.workspace }}/crates


  fmt:
    name: Code Formatting
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    env:
      RUSTDOCFLAGS: -Dwarnings
    steps:
      - name: Checkout macroquest-rs
        uses: actions/checkout@v4
      - name: Fetch Rust Toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - run: cargo fmt --check --all


  doc:
    name: Documentation
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    env:
      RUSTDOCFLAGS: -Dwarnings
    steps:
      - name: Checkout macroquest-rs
        uses: actions/checkout@v4
      - name: Fetch Rust Toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: x86_64-pc-windows-msvc
      - name: Fetch cargo docs-rs
        uses: dtolnay/install@cargo-docs-rs
      - run: cargo docs-rs -p macroquest-proc-macros
      - run: cargo docs-rs -p macroquest

  deps:
    name: Dependencies
    runs-on: windows-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout macroquest-rs
        uses: actions/checkout@v4
      - name: Cache Rust Dependencies
        uses: Swatinem/rust-cache@v2
      - name: Install Tools
        run: cargo install cargo-audit cargo-machete --locked
      - name: Generate Lockfile
        run: cargo generate-lockfile
      - name: Check Unused
        run: cargo machete
      - name: Check Security
        run: cargo audit
